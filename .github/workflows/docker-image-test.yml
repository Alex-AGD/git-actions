name: Docker Image Test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true
          tags: test-app:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run Docker container
        run: |
          docker run -d --name test-container -p 8000:8000 test-app:latest
          sleep 5

      - name: Test health endpoint
        run: |
          response=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8000/health)
          if [ "$response" != "200" ]; then
            echo "Health check failed with status code $response"
            exit 1
          fi
          echo "Health check passed"

      - name: Test main endpoint
        run: |
          response=$(curl -s http://localhost:8000/)
          if ! echo "$response" | grep -q "Hello, World!"; then
            echo "Main endpoint check failed"
            exit 1
          fi
          echo "Main endpoint check passed"

      - name: Test non-root user
        run: |
          # Проверяем, что процесс в контейнере запущен не от root
          user_id=$(docker exec test-container id -u)
          user_name=$(docker exec test-container id -un)
          if [ "$user_id" = "0" ]; then
            echo "Container is running as root!"
            exit 1
          fi
          echo "Container is running as $user_name (UID: $user_id)"

      - name: Clean up
        if: always()
        run: docker rm -f test-container || true